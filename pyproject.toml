[tool.poetry]
name = "spotify_manager"
version = "0.1.0"
description = ""
authors = ["Uriel Fiori <u.fiori@iib-institut.de>"]
packages = [{include = "spotify_manager"}]

[tool.poetry.dependencies]
python = "^3.10"
spotipy = "^2.23.0"
unidecode = "^1.3.6"
pyuca = "^1.2"
pydantic = "^1.10.7"
python-dotenv = "^1.0.0"
typer = {extras = ["all"], version = "^0.9.0"}


[tool.poetry.dev-dependencies]
bandit = "^1.7.4"
black = "^22.6.0"
flake8 = "^4.0.1"
flake8-bugbear = "^22.3.23"
flake8-builtins = "^1.5.3"
flake8-docstrings = "^1.6.0"
isort = "^5.10.1"
mypy = "^0.942"
pep8-naming = "^0.12.1"
pip-audit = "^2.1.0"
pydocstyle = "^6.1.1"
pylint = "^2.13.7"
pytest = "^7.2.0"
pytest-cov = "^3.0.0"
pytest-mock = "^3.7.0"
pytest-random-order = "^1.0.4"
pyupgrade = "^2.31.1"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.pytest_cache
  | \.venv
)/
'''

[tool.isort]
profile = "black"
sections = 'FUTURE,STDLIB,PYTEST,THIRDPARTY,FIRSTPARTY,LOCALFOLDER'
force_single_line = true
known_future_library = 'future,pies'
known_pytest = 'pytest,py.test'
known_first_party = 'merge_state,step_functions,step_functions_commons'
import_heading_stdlib = 'Standard Library'
import_heading_pytest = 'pytest'
import_heading_firstparty = 'UFI'
lines_after_imports = 2
include_trailing_comma = true
force_grid_wrap = false
combine_as_imports = true
line_length = 88

[tool.mypy]
ignore_missing_imports = true
disallow_untyped_defs = true

[tool.bandit]
exclude_dirs = [".venv", "tests"]
